<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gao.dao.ReplyDao">
	<resultMap type="Reply" id="ReplyResult">
		<result property="id" column="id"/>
		<result property="commentId" column="commentId"/>
		<result property="replyName" column="replyName"/>
		<result property="comment" column="comment"/>
		<result property="replyTime" column="replyTime"/>
	</resultMap>
	<select id="findById" parameterType="Integer" resultMap="ReplyResult">
		select * from g_reply where commentId=#{id}
	</select>
	
	<select id="find" parameterType="map" resultMap="ReplyResult">
		select * from g_reply
		<if test="start!=null and size!=null">
			limit #{start},#{size}
		</if>
	</select>
	<select id="getTotal" parameterType="Map" resultType="Long" >
		select count(*) from g_reply
	</select>
	<insert id="save" parameterType="Reply">
		insert into g_reply values(null,#{commentId},#{replyName},#{comment},#{replyTime},#{replyEmail})
	</insert>
	<delete id="delete" parameterType="String">
		delete from g_reply where id=#{id}
	</delete> 
	<!-- <select id="find" parameterType="Map" resultMap="UserResult">
		select * from g_user
		<where>
			<if test="userName!=null and userName!='' ">
				and userName like #{userName}
			</if>
			<if test="roleName!=null and roleName!='' ">
				and roleName like #{roleName}
			</if>
		</where>
		<if test="start!=null and size!=null">
			limit #{start},#{size}
		</if>
	</select>
	
	<select id="getTotal" parameterType="Map" resultType="Long" >
		select count(*) from g_user
		<where>
			<if test="userName!=null and userName!='' ">
				and userName like #{userName}
			</if>
			<if test="roleName!=null and roleName!='' ">
				and roleName like #{roleName}
			</if>
		</where>
	</select>
	
	
	<insert id="add" parameterType="User">
		insert into g_user values(null,#{userName},#{password},#{trueName},#{email},#{phone},#{roleName})
	</insert>
	
	<update id="update" parameterType="User">
		update g_user set userName=#{userName},password=#{password},roleName=#{roleName},trueName=#{trueName},email=#{email},phone=#{phone} where id=#{id}
	</update>
	
	<delete id="delete" parameterType="Integer">
		delete from g_user where id=#{id}
	</delete> -->
</mapper>